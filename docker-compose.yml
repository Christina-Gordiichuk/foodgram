volumes:
  media_volume:
  static_volume:
  pg_data:
  docs:

services:
  db:
    image: postgres:13
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file: .env.prod

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    env_file: .env.prod
    # mount shared static_volume to container's /app/build
    volumes:
      - static_volume:/app/build
    stdin_open: true

  backend:
    container_name: backend
    build:
      context: ./backend
    env_file: .env.prod
    ports:
      - "8000:8000"
    volumes:
      - media_volume:/mnt/media
    depends_on:
      - db
    command: ["/bin/bash", "-c", "python3 manage.py makemigrations users tags recipes ingredients && python3 manage.py migrate -v 3 && python3 manage.py fill_tags_from_csv && python3 manage.py fill_ingredients_from_csv && gunicorn --bind 0.0.0.0:8000 backend.wsgi"]
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
    # copy nginx's conf file
      - ../ssl:/etc/nginx/ssl:ro
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - media_volume:/mnt/media
    # mount shared static_volume to /mnt/static
      - static_volume:/mnt/static
    # mount docs
      - docs:/mnt/docs
    depends_on:
      - backend
